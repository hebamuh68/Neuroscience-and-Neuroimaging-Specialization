library(oro.dicom)
setwd("../neurohacking_data/DICOM/FLAIR")
dir.exists("../neurohacking_data/DICOM/FLAIR")
dir.exists("..../neurohacking_data/DICOM/FLAIR")
dir.exists("../../neurohacking_data/DICOM/FLAIR")
setwd("../../neurohacking_data/DICOM/FLAIR")
dcm <- readDICOM("IM-0001-0001.dcm")
class(slice)
class(slice)
slice <- dcm$img
class(slice)
# Load the oro.dicom library
library(oro.dicom)
# Set the working directory
setwd("../../neurohacking_data/DICOM/FLAIR")
# Load the oro.dicom library
library(oro.dicom)
# Set the working directory
#setwd("../../neurohacking_data/DICOM/FLAIR")
# Read the DICOM file
dcm <- readDICOM("IM-0001-0001.dcm")
# Extract the image slice
slice <- dcm$img
# Print the DICOM metadata
print(dcm$hdr)
# Visualize the DICOM image
image(slice, col = gray(0:255/255), axes = FALSE, xlab = "", ylab = "", main = "DICOM Image")
# Print the DICOM metadata
print(dcm$hdr)
Visualize the DICOM image
# Load the oro.dicom library
library(oro.dicom)
# Set the working directory
#setwd("../../neurohacking_data/DICOM/FLAIR")
# Read the DICOM file
dcm <- readDICOM("IM-0001-0001.dcm")
# Extract the image slice
slice <- dcm$img
# Print the DICOM metadata
#print(dcm$hdr)
# Visualize the DICOM image
image(slice, col = gray(0:255/255), axes = FALSE, xlab = "", ylab = "", main = "DICOM Image")
# Load the oro.dicom library
#library(oro.dicom)
# Set the working directory
#setwd("../../neurohacking_data/DICOM/FLAIR")
# Read the DICOM file
dcm <- readDICOMFile("IM-0001-0001.dcm")
# Extract the pixel data from the DICOM object
pixel_data <- dcm$img[[1]]
# Ensure the pixel data is a matrix
if (!is.matrix(pixel_data)) {
pixel_data <- matrix(pixel_data, nrow = dcm$hdr$Rows, ncol = dcm$hdr$Columns)
}
print(slice)
names(slice)
names(dcm)
dcm$hdr
dcm$img
class(header)
# Extract the image header
header = dcm$hdr
# Extract the image slice
slice <- dcm$img
class(header)
class(dcm$hdr)
class(slice)
slice$hdr
class(slice$hdr)
# Read the DICOM file
slice <- readDICOM("IM-0001-0001.dcm")
names(slice)
# Extract the image header
header = slice$hdr
# Extract the image slice
image <- slice$img
class(image)
class(image[[1]])
dim(image[[1]])
image
image[[1]]
header[1]
# Extract the image header
dcm_header = slice$hdr
# Extract the image slice
dcm_image = slice$img
d = dim(t(dcm_image[[1]]))
image(1:d[1],1:d[2],t(dcm_image[[1]]), col=gray(0:64/64))
# Set the working directory
setwd("../../neurohacking_data/DICOM/T1")
# Set the working directory
setwd("../T1")
# Read the DICOM file
slice = readDICOM("IM-0001-0001.dcm")
names(slice)
# Extract the image header
dcm_header = slice$hdr
# Extract the image slice
dcm_image = slice$img
d = dim(t(dcm_image[[1]]))
image(1:d[1],1:d[2],t(dcm_image[[1]]), col=gray(0:64/64))
# Load the oro.dicom library
library(oro.dicom)
# Set the working directory
#setwd("../../neurohacking_data/DICOM/FLAIR")
# Read the DICOM file
slice = readDICOM("IM-0001-0001.dcm")
names(slice)
# Extract the image header
dcm_header = slice$hdr
# Extract the image slice
dcm_image = slice$img
d = dim(t(dcm_image[[1]]))
image(1:d[1],1:d[2],t(dcm_image[[1]]), col=gray(0:64/64))
# Set the working directory
setwd("../FLAIR")
# Read the DICOM file
slice = readDICOM("IM-0001-0001.dcm")
names(slice)
# Extract the image header
dcm_header = slice$hdr
# Extract the image slice
dcm_image = slice$img
d = dim(t(dcm_image[[1]]))
image(1:d[1],1:d[2],t(dcm_image[[1]]), col=gray(0:64/64))
# Extract the image header
dcm_header = slice$hdr[[1]]
dcm_header
names(dcm_header)
dcm_header$name
dcm_hdr = slice$hdr
dcm_hdr_titles = dcm_header$name
# display specific header value
dcm_hdr[dcm_hdr_titles == "PixelSpacing", "value"]
dcm_hdr = slice$hdr
dcm_hdr_titles = dcm_header$name
# display specific header value
dcm_hdr[dcm_hdr_titles == "PixelSpacing", "value"]
# display specific header value
hdr[dcm_hdr_titles == "PixelSpacing", "value"]
#======================================================
# Extract the image header
dcm_hdr = slice$hdr[[1]]
dcm_hdr_titles = dcm_header$name
# display specific header value
dcm_hdr[dcm_hdr_titles == "PixelSpacing", "value"]
dcm_hdr[dcm_hdr_titles == "PixelSpacing", "FlipAngle"]
dcm_hdr[dcm_hdr_titles == "FlipAngle", "value"]
dcm_hdr[dcm_hdr_titles == "FlipAngle", ]
dcm_hdr_titles
names(dcm_hdr)
# Set the working directory
setwd("../")
pwd
getwd()
# Read the DICOM file
all_slice_T1 = readDICOM("t1/")
# Read the DICOM file
all_slice_T1 = readDICOM("T1/")
dim(all_slice_T1$img[[11]])
img_hdr = all_slice_T1$hdr[[11]]
hdr[hdr$img == "PixelSpacing", "value"]
img_hdr = all_slice_T1$hdr[[11]]
img_hdr[img_hdr$name == "PixelSpacing", "value"]
source("~/2024/Neuroinformatics/Neuroimaging/neurohacking_data/DICOM/Read DICOM img.R")
